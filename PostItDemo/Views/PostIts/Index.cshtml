@using System.Security.Claims;
@using PostItDemo.Controllers;
@using System.Diagnostics;
@model IEnumerable<PostItDemo.Models.PostDTO>

@{
    ViewData["Title"] = "PostIts";
}

<h1>PostIts</h1>


<h2>What do you want to Post?</h2>

@if (Utils.UserHasHandle(User))
{
    <h3>Hello @Utils.GetUserHandle(User)!</h3>
}

<partial name="/Views/PostIts/_PostForm.cshtml" model="new PostIt()" />

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Title)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Body)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Handle)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Uploaded)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Likes)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Replies)
            </th>
        </tr>
    </thead>
    <tbody>
    @foreach (var item in Model) {
        <tr>
            <td>
                @item.Title
            </td>
            <td>
                @item.Body
            </td>
            <td>
                @{
                    if (item.Author == null) {
                        string msg = "Anon";
                        @msg
                    }
                    else {
                        @item.Author.Handle
                    }
                }
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Uploaded)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Likes)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Replies)
            </td>
            <td class="group">
                @if(User is not null && Utils.UserHasHandle(User)){

                    if (!item.PostIsLikedByUser())
                    {
                        <form asp-action="Like" asp-route-id="@item.PostItId">
                            <input type="hidden" asp-for="@item.PostItId" />
                            <input type="submit" value="Like" class="btn btn-secondary"/>
                        </form>
                    }
                    else
                    {
                        <form asp-action="Unlike" asp-route-id="@item.PostItId">
                            <input type="hidden" asp-for="@item.PostItId" />
                            <input type="submit" value="Unlike" class="btn btn-secondary" />
                        </form>
                    }
                }
                        
                <a asp-action="View" asp-route-id="@item.PostItId" class="btn btn-secondary">View</a>
                @if(Utils.UserHasHandle(User) && Utils.GetUserHandle(User) == item.Handle)
                {
                    
                        <a asp-action="Edit" asp-route-id="@item.PostItId" model="@item" class="btn">Edit</a>
                        <form asp-action="Delete" asp-route-id="@item.PostItId" >
                            <input type="hidden" asp-for="@item.PostItId" />
                            <input type="submit" value="Delete" class="btn btn-danger" />
                        </form>
                }
            </td>
        </tr>
    }
    </tbody>
</table>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}